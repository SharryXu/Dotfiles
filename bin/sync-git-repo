#!/bin/bash

# TODO: 1.Add parameter to deal Depth

# Sync git repository.
# Globals:
#   print
#   git
# Arguments:
#   Folder Path
#   Remote Repository Name
#   Remote Repository Path
#   Branch Name (Optional)
#   Depth (Optional)
# Returns:
#   None

function usage() {
  echo -e "\nusage: $(basename $0) [options] local_folder_path

[options]:
-l  local repository folder path
-r  remote repository path
    For example: https://github.com/SharryXu/dotfiles
-b  branch. Default value is master.
-s  source name. Default value is origin.
-t  target name. Default value is origin.
-h  help information.

Warning: For now, we assume the branch name in source and target are the same."
  exit 1
}

branch="master"
source_name="origin"
target_name="origin"
local_repo_path=""
remote_repo_path=""

while getopts "l:r:b:s:t:h" option; do
  case $option in
    l) local_repo_path=$(realpath ${OPTARG})
       ;;
    r) remote_repo_path=${OPTARG}
       if [[ "$remote_repo_path" != "https:"* ]]; then
         print 3 "The remote repository path should be an HTTPS address."
         usage
       fi
       ;;
    b) if [[ ! -z "${OPTARG}" ]]; then
         branch=${OPTARG}
       fi
       ;;
    s) if [[ ! -z "${OPTARG}" ]]; then
         $source_name=${OPTARG}
       fi
       ;;
    t) if [[ ! -z "${OPTARG}" ]]; then
         $target_name=${OPTARG}
       fi
       ;;
    h) usage
      ;;
  esac
done

if [[ ! -d $local_repo_path ]]; then
  print 3 "Please provide local git repository folder."
  usage
elif [[ -d $local_repo_path && $(is-git-repo ) ]]
echo "branch: $branch"
echo "local path: $local_repo_path"
echo "remote path: $remote_repo_path"
fi
