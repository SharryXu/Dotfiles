#!/bin/bash

# Sync git repository.
# Globals:
#   print
#   git
# Arguments:
#   Local Folder Path
#   Remote Repository Name
#   Remote Repository Path
#   Branch Name (Optional)
#   Depth (Optional)
# Returns:
#   None

function usage() {
  echo -e "usage: $(basename $0) [options] local_folder_path
[options]:
-n  Remote repository name
-p  Remote repository address
    like: https://github.com/SharryXu/Dotfiles
-b  Branch
-d  Depth
-h  Show help information."
  exit 1
}

while getopts "n:p:b:d:h" option; do
  case $option in
    n);;
    h)usage;;
  esac
done

  local currentFolder=$PWD

  # Please notice if the parameter is an array, then the number should count the array's length.
  if [[ $# -ge 3 ]]; then
    local repoInfo=$2
    if [ -d $1 ]; then
      if [[ $(is-folder-empty $1) == $true ]] ; then
        print 2 "${repoInfo[0]} existed but it's empty."
        git clone ${repoInfo[1]} $1
        print 1 "${repoInfo[0]} has been successfully cloned."
      else
        print 0 "${repoInfo[0]} existed and now will pull the latest version."
        cd $1

        if [ $# -ge 4 ]; then
          print 1 "Checkout to branch: $4."
          git checkout $4
        fi

        git pull
        cd $currentFolder

        print 1 "${repoInfo[0]} has been successfully updated."
      fi
    else
      print 2 "${repoInfo[0]} is not existed and now downloading..."

      if [ $# -ge 5 ]; then
        sudo git clone ${repoInfo[1]} $1 --depth $5
      else
        sudo git clone ${repoInfo[1]} $1
      fi

      print 1 "${repoInfo[0]} has been successfully cloned."
    fi
  else
    print 3 "$error_message_check_parameters"
    exit 1
  fi

